#!/bin/bash

# =============================================================================
# S1S2HiC Ëá™Âä®ÂåñÂ§ÑÁêÜËÑöÊú¨ - ÂÇªÁìúÂºèËøêË°åÁâàÊú¨
# ‰ΩøÁî®ÊñπÊ≥ï: ./run_s1s2hic_auto.sh [ÈÖçÁΩÆÊñá‰ª∂]
# ‰æãÂ¶Ç: ./run_s1s2hic_auto.sh my_experiment.conf
# =============================================================================

VERSION="1.0.0"
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
LOG_DIR="${SCRIPT_DIR}/auto_logs"

# ÈªòËÆ§ÈÖçÁΩÆ
DEFAULT_CONFIG_FILE="${SCRIPT_DIR}/configs/templates/simple_config.conf"
PARALLEL_SCRIPT="${SCRIPT_DIR}/scripts/run_group_parallel.sh"

# ÂàõÂª∫Êó•ÂøóÁõÆÂΩï
mkdir -p "$LOG_DIR"

# È¢úËâ≤ËæìÂá∫ÂáΩÊï∞
red() { echo -e "\033[31m$1\033[0m"; }
green() { echo -e "\033[32m$1\033[0m"; }
yellow() { echo -e "\033[33m$1\033[0m"; }
blue() { echo -e "\033[34m$1\033[0m"; }
bold() { echo -e "\033[1m$1\033[0m"; }

# ÊòæÁ§∫Ê®™ÂπÖ
show_banner() {
    echo "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê"
    echo "$(bold "üß¨ S1S2HiC Ëá™Âä®ÂåñÂ§ÑÁêÜËÑöÊú¨ v${VERSION}")"
    echo "$(bold "üöÄ ÂÇªÁìúÂºè‰∏ÄÈîÆËøêË°åÁâàÊú¨")"
    echo "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê"
}

# ÊòæÁ§∫Â∏ÆÂä©‰ø°ÊÅØ
show_help() {
    show_banner
    echo ""
    echo "$(bold "üìñ ‰ΩøÁî®ÊñπÊ≥ï:")"
    echo "  $0 [ÈÖçÁΩÆÊñá‰ª∂]"
    echo ""
    echo "$(bold "üìã Á§∫‰æã:")"
    echo "  $0                           # ‰ΩøÁî®ÈªòËÆ§ÈÖçÁΩÆÊñá‰ª∂"
    echo "  $0 my_experiment.conf        # ‰ΩøÁî®Ëá™ÂÆö‰πâÈÖçÁΩÆÊñá‰ª∂"
    echo "  $0 --create-template         # ÂàõÂª∫ÈÖçÁΩÆÊñá‰ª∂Ê®°Êùø"
    echo "  $0 --help                    # ÊòæÁ§∫Ê≠§Â∏ÆÂä©‰ø°ÊÅØ"
    echo ""
    echo "$(bold "üìÅ ÈÖçÁΩÆÊñá‰ª∂Ê†ºÂºè (simple_config.conf):")"
    echo "  # È°πÁõÆÂêçÁß∞"
    echo "  PROJECT_NAME=my_experiment"
    echo ""
    echo "  # Ë¶ÅÂ§ÑÁêÜÁöÑÁªÑÔºà1-5ÔºåÁî®ÈÄóÂè∑ÂàÜÈöîÔºâ"
    echo "  GROUPS=1,2,3,4,5"
    echo ""
    echo "  # Êï∞ÊçÆÊ†πÁõÆÂΩï"
    echo "  DATA_ROOT=/data3/maolp/All_ZengXi_data5/20250502_fq/fastq/Allfq/ByGroups"
    echo ""
    echo "  # Âπ∂Ë°å‰ªªÂä°Êï∞ÔºàÂèØÈÄâÔºåÈªòËÆ§Ëá™Âä®Ê£ÄÊµãÔºâ"
    echo "  # MAX_PARALLEL=3"
    echo ""
    echo "$(bold "üîß ÂèØÁî®ÁöÑÁªÑÁ±ªÂûã:")"
    echo "  Group1: MboI+GATC+SeqA (3‰∏™Ê†∑Êú¨)"
    echo "  Group2: MboI+GATC+SeqB (1‰∏™Ê†∑Êú¨)" 
    echo "  Group3: MseI+CviQI+TA+SeqA (3‰∏™Ê†∑Êú¨)"
    echo "  Group4: MseI+CviQI+TA+SeqB (1‰∏™Ê†∑Êú¨)"
    echo "  Group5: MboI+CviQI+GATC+TA+SeqA (1‰∏™Ê†∑Êú¨)"
    echo ""
    echo "$(bold "üìã ÂÆåÊï¥Â∑•‰ΩúÊµÅÁ®ã:")"
    echo "  1. S1Ê≠•È™§: Â∫èÂàóÁ≠õÈÄâÂíåÁªüËÆ°"
    echo "  2. S2Ê≠•È™§: ÈÖ∂ÂàáÂàÜÂâ≤"
    echo "  3. HiCÊ≠•È™§: HiC-ProÂàÜÊûê"
    echo "  4. ÁªìÊûúÊï¥ÁêÜÂíåÊä•ÂëäÁîüÊàê"
}

# ÂàõÂª∫ÈÖçÁΩÆÊñá‰ª∂Ê®°Êùø
create_template() {
    local template_file="configs/templates/simple_config.conf"
    echo "$(green "üìù ÂàõÂª∫ÈÖçÁΩÆÊñá‰ª∂Ê®°Êùø: $template_file")"
    
    cat > "$template_file" << 'EOF'
# =============================================================================
# S1S2HiC Ëá™Âä®ÂåñÂ§ÑÁêÜÈÖçÁΩÆÊñá‰ª∂
# =============================================================================

# È°πÁõÆÂêçÁß∞ÔºàÂøÖÂ°´Ôºâ
# Áî®‰∫éÊ†áËØÜÊ≠§Ê¨°ÂàÜÊûêÔºåÂª∫ËÆÆÂåÖÂê´Êó•ÊúüÂíåÊèèËø∞
PROJECT_NAME=my_s1s2hic_experiment_$(date +%Y%m%d)

# Ë¶ÅÂ§ÑÁêÜÁöÑÁªÑÔºàÂøÖÂ°´Ôºâ
# ÂèØÈÄâÂÄº: 1,2,3,4,5 ÊàñÂÆÉ‰ª¨ÁöÑ‰ªªÊÑèÁªÑÂêà
# ‰æãÂ¶Ç: GROUPS=1,3,5 Ë°®Á§∫Âè™Â§ÑÁêÜÁªÑ1„ÄÅ3„ÄÅ5
GROUPS=1,2,3,4,5

# Êï∞ÊçÆÊ†πÁõÆÂΩïÔºàÂøÖÂ°´Ôºâ
# ÂåÖÂê´ÂêÑÁªÑÊï∞ÊçÆÂ≠êÁõÆÂΩïÁöÑÁà∂ÁõÆÂΩï
DATA_ROOT=/data3/maolp/All_ZengXi_data5/20250502_fq/fastq/Allfq/ByGroups

# ÊúÄÂ§ßÂπ∂Ë°å‰ªªÂä°Êï∞ÔºàÂèØÈÄâÔºâ
# ÁïôÁ©∫Ëá™Âä®Ê£ÄÊµãCPUÊ†∏ÂøÉÊï∞ÔºåÂª∫ËÆÆ‰∏çË∂ÖËøáÂèØÁî®Ê†∏ÂøÉÊï∞ÁöÑ80%
# MAX_PARALLEL=3

# ËæìÂá∫Ê†πÁõÆÂΩïÔºàÂèØÈÄâÔºâ
# ÁïôÁ©∫ÂàôÂú®ÊØè‰∏™ÁªÑÁöÑÂ∑•‰ΩúÁõÆÂΩï‰∏≠ÁîüÊàêÁªìÊûú
# OUTPUT_ROOT=/path/to/output

# ÈÇÆ‰ª∂ÈÄöÁü•ÔºàÂèØÈÄâÔºâ
# ÂÆåÊàêÂêéÂèëÈÄÅÈÄöÁü•ÈÇÆ‰ª∂
# EMAIL_NOTIFY=your@email.com

# Ê∏ÖÁêÜÈÄâÈ°πÔºàÂèØÈÄâÔºâ
# ÊòØÂê¶Âú®ÊàêÂäüÂÆåÊàêÂêéÊ∏ÖÁêÜ‰∏≠Èó¥Êñá‰ª∂Ôºàtrue/falseÔºâ
CLEANUP_TEMP=false

# ÈáçËØïÈÄâÈ°πÔºàÂèØÈÄâÔºâ
# Â§±Ë¥•Êó∂ÁöÑÈáçËØïÊ¨°Êï∞
RETRY_COUNT=1
EOF

    echo "$(green "‚úÖ ÈÖçÁΩÆÊñá‰ª∂Ê®°ÊùøÂ∑≤ÂàõÂª∫: $template_file")"
    echo ""
    echo "$(yellow "üìù ËØ∑ÁºñËæëÈÖçÁΩÆÊñá‰ª∂Âπ∂Ê†πÊçÆÊÇ®ÁöÑÈúÄÊ±Ç‰øÆÊîπÂèÇÊï∞Ôºö")"
    echo "  nano $template_file"
    echo ""
    echo "$(yellow "üöÄ ÁÑ∂ÂêéËøêË°åÂàÜÊûêÔºö")"
    echo "  $0 $template_file"
}

# ËØªÂèñÈÖçÁΩÆÊñá‰ª∂
read_config() {
    local config_file="$1"
    
    if [[ ! -f "$config_file" ]]; then
        red "‚ùå ÈîôËØØ: ÈÖçÁΩÆÊñá‰ª∂‰∏çÂ≠òÂú®: $config_file"
        echo ""
        echo "$(yellow "üí° ÊèêÁ§∫: ÂàõÂª∫ÈÖçÁΩÆÊñá‰ª∂Ê®°ÊùøÔºö")"
        echo "  $0 --create-template"
        exit 1
    fi
    
    echo "$(blue "üìñ ËØªÂèñÈÖçÁΩÆÊñá‰ª∂: $config_file")"
    
    # ËØªÂèñÈÖçÁΩÆÊñá‰ª∂ÔºåÂøΩÁï•Ê≥®ÈáäÂíåÁ©∫Ë°å
    while IFS='=' read -r key value; do
        # Ë∑≥ËøáÊ≥®ÈáäÂíåÁ©∫Ë°å
        [[ "$key" =~ ^[[:space:]]*# ]] && continue
        [[ -z "$key" ]] && continue
        
        # ÁßªÈô§ÂâçÂêéÁ©∫Ê†º
        key=$(echo "$key" | xargs)
        value=$(echo "$value" | xargs)
        
        # ËÆæÁΩÆÂèòÈáè
        case "$key" in
            PROJECT_NAME) PROJECT_NAME="$value" ;;
            GROUPS) GROUPS="$value" ;;
            DATA_ROOT) DATA_ROOT="$value" ;;
            MAX_PARALLEL) MAX_PARALLEL="$value" ;;
            OUTPUT_ROOT) OUTPUT_ROOT="$value" ;;
            EMAIL_NOTIFY) EMAIL_NOTIFY="$value" ;;
            CLEANUP_TEMP) CLEANUP_TEMP="$value" ;;
            RETRY_COUNT) RETRY_COUNT="$value" ;;
        esac
    done < "$config_file"
}

# È™åËØÅÈÖçÁΩÆ
validate_config() {
    local errors=0
    
    echo "$(blue "üîç È™åËØÅÈÖçÁΩÆÂèÇÊï∞...")"
    
    # Ê£ÄÊü•ÂøÖÂ°´ÂèÇÊï∞
    if [[ -z "$PROJECT_NAME" ]]; then
        red "‚ùå ÈîôËØØ: PROJECT_NAME Êú™ËÆæÁΩÆ"
        ((errors++))
    fi
    
    if [[ -z "$GROUPS" ]]; then
        red "‚ùå ÈîôËØØ: GROUPS Êú™ËÆæÁΩÆ"
        ((errors++))
    fi
    
    if [[ -z "$DATA_ROOT" ]]; then
        red "‚ùå ÈîôËØØ: DATA_ROOT Êú™ËÆæÁΩÆ"
        ((errors++))
    fi
    
    # Ê£ÄÊü•Êï∞ÊçÆÁõÆÂΩï
    if [[ ! -d "$DATA_ROOT" ]]; then
        red "‚ùå ÈîôËØØ: Êï∞ÊçÆÊ†πÁõÆÂΩï‰∏çÂ≠òÂú®: $DATA_ROOT"
        ((errors++))
    fi
    
    # È™åËØÅÁªÑÂè∑
    IFS=',' read -ra GROUP_ARRAY <<< "$GROUPS"
    for group in "${GROUP_ARRAY[@]}"; do
        group=$(echo "$group" | xargs)  # ÁßªÈô§Á©∫Ê†º
        if [[ ! "$group" =~ ^[1-5]$ ]]; then
            red "‚ùå ÈîôËØØ: Êó†ÊïàÁöÑÁªÑÂè∑: $group (ÂøÖÈ°ªÊòØ1-5)"
            ((errors++))
        fi
    done
    
    # Ê£ÄÊü•Âπ∂Ë°åËÑöÊú¨
    if [[ ! -f "$PARALLEL_SCRIPT" ]]; then
        red "‚ùå ÈîôËØØ: Âπ∂Ë°åÂ§ÑÁêÜËÑöÊú¨‰∏çÂ≠òÂú®: $PARALLEL_SCRIPT"
        ((errors++))
    fi
    
    if [[ $errors -gt 0 ]]; then
        red "‚ùå ÈÖçÁΩÆÈ™åËØÅÂ§±Ë¥•ÔºåÂèëÁé∞ $errors ‰∏™ÈîôËØØ"
        exit 1
    fi
    
    echo "$(green "‚úÖ ÈÖçÁΩÆÈ™åËØÅÈÄöËøá")"
}

# ÊòæÁ§∫ÈÖçÁΩÆÊëòË¶Å
show_config_summary() {
    echo ""
    echo "$(bold "üìã ÈÖçÁΩÆÊëòË¶ÅÔºö")"
    echo "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê"
    echo "È°πÁõÆÂêçÁß∞: $(green "$PROJECT_NAME")"
    echo "Â§ÑÁêÜÁªÑ: $(green "$GROUPS")"
    echo "Êï∞ÊçÆÁõÆÂΩï: $(green "$DATA_ROOT")"
    echo "Âπ∂Ë°å‰ªªÂä°Êï∞: $(green "${MAX_PARALLEL:-Ëá™Âä®Ê£ÄÊµã}")"
    echo "ËæìÂá∫ÁõÆÂΩï: $(green "${OUTPUT_ROOT:-ÂêÑÁªÑÂ∑•‰ΩúÁõÆÂΩï}")"
    echo "Êó•ÂøóÁõÆÂΩï: $(green "$LOG_DIR")"
    echo "ÈáçËØïÊ¨°Êï∞: $(green "${RETRY_COUNT:-1}")"
    echo "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê"
}

# ÂèëÈÄÅÈÇÆ‰ª∂ÈÄöÁü•
send_notification() {
    local status="$1"
    local message="$2"
    
    if [[ -n "$EMAIL_NOTIFY" ]]; then
        echo "$(blue "üìß ÂèëÈÄÅÈÇÆ‰ª∂ÈÄöÁü•Âà∞: $EMAIL_NOTIFY")"
        {
            echo "Subject: S1S2HiC ÂàÜÊûê $status - $PROJECT_NAME"
            echo ""
            echo "È°πÁõÆ: $PROJECT_NAME"
            echo "Áä∂ÊÄÅ: $status"
            echo "Êó∂Èó¥: $(date)"
            echo "ÁªÑ: $GROUPS"
            echo ""
            echo "$message"
        } | sendmail "$EMAIL_NOTIFY" 2>/dev/null || echo "$(yellow "‚ö†Ô∏è  ÈÇÆ‰ª∂ÂèëÈÄÅÂ§±Ë¥•")"
    fi
}

# ‰∏ªËøêË°åÂáΩÊï∞
run_analysis() {
    local start_time=$(date +%s)
    local main_log="${LOG_DIR}/auto_run_${PROJECT_NAME}_$(date +%Y%m%d_%H%M%S).log"
    
    echo "$(green "üöÄ ÂºÄÂßã S1S2HiC Ëá™Âä®ÂàÜÊûê")"
    echo "ÂºÄÂßãÊó∂Èó¥: $(date)"
    echo "‰∏ªÊó•ÂøóÊñá‰ª∂: $main_log"
    echo "" | tee -a "$main_log"
    
    # ËÆ∞ÂΩïÈÖçÁΩÆÂà∞Êó•Âøó
    {
        echo "=== S1S2HiC Ëá™Âä®ÂàÜÊûêÊó•Âøó ==="
        echo "ÂºÄÂßãÊó∂Èó¥: $(date)"
        echo "È°πÁõÆÂêçÁß∞: $PROJECT_NAME"
        echo "Â§ÑÁêÜÁªÑ: $GROUPS"
        echo "Êï∞ÊçÆÁõÆÂΩï: $DATA_ROOT"
        echo "ËÑöÊú¨ÁâàÊú¨: $VERSION"
        echo "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê"
        echo ""
    } >> "$main_log"
    
    # ËΩ¨Êç¢ÁªÑÂè∑‰∏∫Êï∞ÁªÑ
    IFS=',' read -ra GROUP_ARRAY <<< "$GROUPS"
    
    # ÊâßË°åÂπ∂Ë°åÂ§ÑÁêÜ
    echo "$(blue "‚ñ∂Ô∏è  ÊâßË°åÂπ∂Ë°åÂ§ÑÁêÜ...")" | tee -a "$main_log"
    
    # ÊûÑÂª∫Âπ∂Ë°åËÑöÊú¨ÂëΩ‰ª§
    local groups_args=""
    for group in "${GROUP_ARRAY[@]}"; do
        group=$(echo "$group" | xargs)
        groups_args="$groups_args $group"
    done
    
    # ËøêË°åÂπ∂Ë°åÂ§ÑÁêÜËÑöÊú¨
    echo "ÊâßË°åÂëΩ‰ª§: $PARALLEL_SCRIPT $groups_args" | tee -a "$main_log"
    
    if "$PARALLEL_SCRIPT" $groups_args 2>&1 | tee -a "$main_log"; then
        local end_time=$(date +%s)
        local duration=$((end_time - start_time))
        local hours=$((duration / 3600))
        local minutes=$(((duration % 3600) / 60))
        local seconds=$((duration % 60))
        
        echo "" | tee -a "$main_log"
        echo "$(green "üéâ S1S2HiC ÂàÜÊûêÊàêÂäüÂÆåÊàê!")" | tee -a "$main_log"
        echo "ÊÄªËÄóÊó∂: ${hours}h ${minutes}m ${seconds}s" | tee -a "$main_log"
        echo "ÂÆåÊàêÊó∂Èó¥: $(date)" | tee -a "$main_log"
        
        # ÁîüÊàêÁªìÊûúÊëòË¶Å
        generate_summary_report "$main_log"
        
        # ÂèëÈÄÅÊàêÂäüÈÄöÁü•
        send_notification "ÊàêÂäüÂÆåÊàê" "ÊâÄÊúâÁªÑÂ§ÑÁêÜÊàêÂäüÂÆåÊàêÔºåÊÄªËÄóÊó∂: ${hours}h ${minutes}m ${seconds}s"
        
        return 0
    else
        echo "" | tee -a "$main_log"
        echo "$(red "‚ùå S1S2HiC ÂàÜÊûêÂ§±Ë¥•")" | tee -a "$main_log"
        echo "Â§±Ë¥•Êó∂Èó¥: $(date)" | tee -a "$main_log"
        
        # ÂèëÈÄÅÂ§±Ë¥•ÈÄöÁü•
        send_notification "Â§±Ë¥•" "ÂàÜÊûêËøáÁ®ã‰∏≠Âá∫Áé∞ÈîôËØØÔºåËØ∑Ê£ÄÊü•Êó•ÂøóÊñá‰ª∂: $main_log"
        
        return 1
    fi
}

# ÁîüÊàêÁªìÊûúÊëòË¶ÅÊä•Âëä
generate_summary_report() {
    local main_log="$1"
    local summary_file="${LOG_DIR}/summary_${PROJECT_NAME}_$(date +%Y%m%d_%H%M%S).txt"
    
    echo "$(blue "üìä ÁîüÊàêÁªìÊûúÊëòË¶ÅÊä•Âëä...")"
    
    {
        echo "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê"
        echo "S1S2HiC ÂàÜÊûêÁªìÊûúÊëòË¶ÅÊä•Âëä"
        echo "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê"
        echo "È°πÁõÆÂêçÁß∞: $PROJECT_NAME"
        echo "ÂàÜÊûêÊó∂Èó¥: $(date)"
        echo "Â§ÑÁêÜÁªÑ: $GROUPS"
        echo ""
        
        echo "‚ïê‚ïê‚ïê ÂêÑÁªÑÂ§ÑÁêÜÁä∂ÊÄÅ ‚ïê‚ïê‚ïê"
        IFS=',' read -ra GROUP_ARRAY <<< "$GROUPS"
        for group in "${GROUP_ARRAY[@]}"; do
            group=$(echo "$group" | xargs)
            if grep -q "Group${group}.*Â§ÑÁêÜÊàêÂäüÂÆåÊàê" "$main_log" 2>/dev/null; then
                echo "‚úÖ Group${group}: ÊàêÂäüÂÆåÊàê"
            else
                echo "‚ùå Group${group}: Â§ÑÁêÜÂ§±Ë¥•"
            fi
        done
        
        echo ""
        echo "‚ïê‚ïê‚ïê ËæìÂá∫Êñá‰ª∂‰ΩçÁΩÆ ‚ïê‚ïê‚ïê"
        for group in "${GROUP_ARRAY[@]}"; do
            group=$(echo "$group" | xargs)
            local group_dir="${DATA_ROOT}/Group${group}_*"
            if ls $group_dir 2>/dev/null | head -1 >/dev/null; then
                local actual_dir=$(ls -d $group_dir 2>/dev/null | head -1)
                echo "Group${group} ÁªìÊûúÁõÆÂΩï: $actual_dir"
                
                # ÂàóÂá∫ÂÖ≥ÈîÆËæìÂá∫Êñá‰ª∂
                if [[ -d "$actual_dir/CountFold" ]]; then
                    echo "  - S1ÁªüËÆ°Êñá‰ª∂: $actual_dir/CountFold/"
                fi
                if [[ -d "$actual_dir/Group${group}_S2_Enzyme_Split" ]]; then
                    echo "  - S2ÂàÜÂâ≤Êñá‰ª∂: $actual_dir/Group${group}_S2_Enzyme_Split/"
                fi
                if [[ -d "$actual_dir/Run3_hic" ]]; then
                    echo "  - HiCÂàÜÊûêÁªìÊûú: $actual_dir/Run3_hic/"
                fi
                if ls "$actual_dir"/S1S2HiC_Complete_Report_*.txt 2>/dev/null >/dev/null; then
                    echo "  - ÂÆåÊï¥Êä•Âëä: $(ls "$actual_dir"/S1S2HiC_Complete_Report_*.txt 2>/dev/null)"
                fi
            fi
        done
        
        echo ""
        echo "‚ïê‚ïê‚ïê Êó•ÂøóÊñá‰ª∂ ‚ïê‚ïê‚ïê"
        echo "‰∏ªÊó•Âøó: $main_log"
        echo "ËØ¶ÁªÜÊó•Âøó: $LOG_DIR/"
        
    } > "$summary_file"
    
    echo "$(green "üìã ÁªìÊûúÊëòË¶ÅÂ∑≤‰øùÂ≠ò: $summary_file")"
    
    # ÊòæÁ§∫ÁÆÄË¶ÅÊëòË¶Å
    echo ""
    echo "$(bold "üìä Âø´ÈÄüÁªìÊûúÊ¶ÇËßà:")"
    cat "$summary_file" | grep -E "(‚úÖ|‚ùå|Group.*ÁªìÊûúÁõÆÂΩï)"
}

# ‰∏ªÁ®ãÂ∫èÂÖ•Âè£
main() {
    # ËÆæÁΩÆÈªòËÆ§ÂÄº
    PROJECT_NAME=""
    GROUPS=""
    DATA_ROOT=""
    MAX_PARALLEL=""
    OUTPUT_ROOT=""
    EMAIL_NOTIFY=""
    CLEANUP_TEMP="false"
    RETRY_COUNT="1"
    
    # Â§ÑÁêÜÂëΩ‰ª§Ë°åÂèÇÊï∞
    case "${1:-}" in
        ""|"-h"|"--help")
            show_help
            exit 0
            ;;
        "--create-template")
            create_template
            exit 0
            ;;
        *)
            CONFIG_FILE="$1"
            ;;
    esac
    
    # Â¶ÇÊûúÊ≤°ÊúâÊåáÂÆöÈÖçÁΩÆÊñá‰ª∂Ôºå‰ΩøÁî®ÈªòËÆ§ÈÖçÁΩÆÊñá‰ª∂
    if [[ -z "$CONFIG_FILE" ]]; then
        CONFIG_FILE="$DEFAULT_CONFIG_FILE"
        
        # Â¶ÇÊûúÈªòËÆ§ÈÖçÁΩÆÊñá‰ª∂‰∏çÂ≠òÂú®ÔºåÂàõÂª∫Ê®°ÊùøÂπ∂ÈÄÄÂá∫
        if [[ ! -f "$CONFIG_FILE" ]]; then
            echo "$(yellow "üìù ÈªòËÆ§ÈÖçÁΩÆÊñá‰ª∂‰∏çÂ≠òÂú®ÔºåÂàõÂª∫Ê®°Êùø...")"
            create_template
            exit 0
        fi
    fi
    
    # ÊòæÁ§∫Ê®™ÂπÖ
    show_banner
    echo ""
    
    # ËØªÂèñÂíåÈ™åËØÅÈÖçÁΩÆ
    read_config "$CONFIG_FILE"
    validate_config
    show_config_summary
    
    # Á°ÆËÆ§ÊâßË°å
    echo ""
    echo "$(yellow "‚ö†Ô∏è  Âç≥Â∞ÜÂºÄÂßãÂàÜÊûêÔºåËøôÂèØËÉΩÈúÄË¶ÅÂæàÈïøÊó∂Èó¥...")"
    read -p "$(bold "ÁªßÁª≠ÊâßË°å? [y/N]: ")" -n 1 -r
    echo ""
    
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        echo "$(yellow "üö´ Áî®Êà∑ÂèñÊ∂àÊìç‰Ωú")"
        exit 0
    fi
    
    # ËøêË°åÂàÜÊûê
    if run_analysis; then
        echo ""
        echo "$(green "üéä ÊâÄÊúâÂàÜÊûêÂ∑≤ÊàêÂäüÂÆåÊàêÔºÅ")"
        echo "$(blue "üìÅ Êü•ÁúãÁªìÊûúÊëòË¶Å: ${LOG_DIR}/summary_${PROJECT_NAME}_*.txt")"
        exit 0
    else
        echo ""
        echo "$(red "üí• ÂàÜÊûêËøáÁ®ã‰∏≠Âá∫Áé∞ÈîôËØØ")"
        echo "$(yellow "üìã ËØ∑Ê£ÄÊü•Êó•ÂøóÊñá‰ª∂Ëé∑ÂèñËØ¶ÁªÜ‰ø°ÊÅØ")"
        exit 1
    fi
}

# ÊâßË°å‰∏ªÁ®ãÂ∫è
main "$@" 